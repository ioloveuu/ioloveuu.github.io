---
layout: post
title: 原型链的学习
description: 关于原型链的学习。
category: blog
comments:
---
  以前对于原型链真是一知半解，可能自己的理解能力不行，抱着红皮书一顿狂啃，还是云里雾里的。最近在网上看到一篇分析文章，顿时感觉贸然所悟，特意把这个写下来总结一下。
  首先，在JS里有一个万物皆对象的传说，不提对单身狗的一万点暴击，这个对象也是有区别，手动斜眼。对象分为普通对象和函数对象。普通对象和函数对象都具有__proto__属性,这一点是相同的。但是普通对象不具有prototype，也就是所谓的原型对象。对了，还有另外一点，Function.prototype这个浓眉大眼的家伙也是没有原型对象的，这一点是吾辈十分欣慰的。那么这个原型对象是用来做什么的呢？当然不是秀恩爱了，prototype在JS中的主要作用是用于不同作用域中的继承。可以看看下面的经典代码：
```
    var person = function(name){
     this.name = name
    };
    person.prototype.getName = function(){
       return this.name; 
    }
    var man = new person(‘ioloveuu’);
    man.getName(); //ioloveuu
```
  从这个例子可以看出，通过给person.prototype设置了一个函数对象的属性，而person实例出来的普通对象就继承了这个属性。那么继承是通过什么来传递的呢，总不能靠意念把。当然不是了，前面还说了一个叫__proto__的属性。我刚说过JS在创建对象的时候，都有一个叫做__proto__的内置属性，用于指向创建它的函数对象的原型对象prototype。以上面的例子为例：
```
    console.log(man.__proto__ === person.prototype) //true
```
  同样，person.prototype对象也有__proto__属性，它指向创建它的函数对象（Object）的prototype
```
  console.log(person.prototype.__proto__ === Object.prototype) //true
```
  然后Object.prototype对象也有__proto__属性，但它比较特殊，为null
```
  console.log(Object.prototype.__proto__) //null
```
总结下来就是这么一个传递链：
```
  man.__proto__ ==> person.prototype.__proto__ ==> Object.prototype.__proto__ ==> null
```
原型对象prototype中还有个预定义的constructor属性，用来引用它的函数对象。这是一种循环引用
```
  person.prototype.constructor === person //true
  Function.prototype.constructor === Function //true
  Object.prototype.constructor === Object //true
```

<noscript>Please enable JavaScript to view the comment form powered by <a href="https://commentit.io/">Comm(ent|it)</a></noscript>
<div id="commentit"></div>
<script type="text/javascript">
  /** CONFIGURATION VARIABLES **/
  var commentitUsername = 'ioloveuu';
  var commentitRepo = 'ioloveuu/ioloveuu.github.io';
  var commentitPath = '{{ page.path }}';

  /** DON'T EDIT FOLLOWING LINES **/
  (function() {
      var commentit = document.createElement('script');
      commentit.type = 'text/javascript';
      commentit.async = true;
      commentit.src = 'https://commentit.io/static/embed/dist/commentit.js';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(commentit);
  })();
</script>
  {%if page.comments %}
  {% assign sorted_comments = (page.comments | sort: 'date') %}
{% endif %}
{% for c in sorted_comments %}
  <div class="media">
    <div class="media-left">
      <img src="{{ c.author.picture }}" alt="{{ c.author.displayName}}" height="73" width="73">
    </div>
    <div class="media-body">
      <p class="text-muted">
        <a href="{{ c.author.url }}">{{ c.author.displayName }}</a>
        on {{ c.date | date_to_string }}
      </p>
      <p>{{ c.content | newline_to_br }}</p>
    </div>
  </div>
{% else %}
  There are no comments on this post.
{% endfor %}


